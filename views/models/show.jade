extend ../layout
block content
  script(src="/vendor/gl-matrix2.js")
  script(src="/vendor/webgl-utils.js")
  script(src="/vendor/jquery-2.js")

  script(src="/glviewer/obj-module.js")
  script(src="https://checkout.stripe.com/v2/checkout.js")

  script(id="shader-fs", type="x-shader/x-fragment").
    precision mediump float;

    varying vec2 vTextureCoord;
    varying vec2 vReflectiveTextureCoord;
    varying vec3 vPosition;
    varying vec3 vNormal;

    uniform vec3 lightPosition;

    uniform vec3 uAmbientColor;


    void main(void) {
        vec3 defaultLight = vec3(.8,.8,.8);
        vec3 lightIntensity;
        vec4 roughTextureColor = vec4(1,1,1,1);
        vec3 textureTotals = vec3( 0.5, 0.5, 0.5);

        vec3 eyeDirection = normalize(-vPosition);
        
        vec3 lightDirectionWithRespectToVertex = -normalize(vPosition - lightPosition);
        vec3 reflectionDirection = reflect(-lightDirectionWithRespectToVertex, vNormal);

        float directionalLightWeighting = max(dot(vNormal, lightDirectionWithRespectToVertex), 0.0);

        float specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), 25.0);

        lightIntensity = uAmbientColor + defaultLight * directionalLightWeighting + defaultLight * 1.0 * specularLightWeighting;
        //gl_FragColor = vec4(textureTotals * vLightWeighting + vec3(0.6,0.6,0.6) * specularLightWeighting, roughTextureColor.a);
        gl_FragColor = vec4(textureTotals * lightIntensity, roughTextureColor.a);
    }
  script(id="shader-vs", type="x-shader/x-vertex").
    attribute vec3 aVertexPosition;
    attribute vec3 aVertexNormal;
    attribute vec2 aTextureCoord;

    uniform mat4 uMVMatrix;
    uniform mat4 uPMatrix;
    uniform mat3 uNMatrix;

    uniform vec3 lightPosition;

    uniform vec3 uAmbientColor;

    uniform vec3 uLightingDirection;
    uniform vec3 uDirectionalColor;

    varying vec2 vTextureCoord;
    varying vec2 vReflectiveTextureCoord;
    varying vec3 vLightWeighting;
    varying vec3 vPosition;
    varying vec3 vNormal;

    void main(void) {
        vPosition = (uMVMatrix * vec4(aVertexPosition, 1.0)).xyz;
        gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);
        vec3 transformedNormal = uNMatrix * aVertexNormal;
        vNormal = transformedNormal;
        vTextureCoord = aTextureCoord;
        vReflectiveTextureCoord = vec2(0.5, 0.5) + vec2(transformedNormal[0]*.5, transformedNormal[1]*.5);        
    }
  script.
    var modelURL = "/uploads/" + '#{model_URL}';
    var starred = #{starred};
    var loggedIn = #{logged_in}
    $( document ).ready( function(){
      webGLStart();
      $("#a-star").click(function() {
        if(loggedIn){
          console.log($(this));
          $( this ).removeClass("fa-star-o fa-star").addClass("fa-spinner fa-spin")
          console.log("a was clicked"); // or alert("click");
        
          $.post(starred ? "/models/#{model._id}/unstar" : "/models/#{model._id}/star", function(data){
            console.log("number of stars: " + data);

              $( "#a-star" ).removeClass("fa-spinner fa-spin").addClass(starred ? "fa-star-o" : "fa-star")
              $("#star-holder").text(data);
              starred = !starred;
            });
          }
      });
    });

  h1.show-header #{model.name}
  div.pure-menu.pure-menu-open.pure-menu-horizontal
    ul.show-gl-menu
      if show_edit
        li
          a(href="/models/#{model._id}/edit")
            i(class="fa fa-pencil fa-lg")
            |  Edit
      - var CLASS = logged_in ? "" : "pure-menu-disabled"
      li(class=CLASS, id="star-holder")

        a
          if starred
            i(id="a-star", class="fa fa-star fa-lg")
          else
            i(id="a-star", class="fa fa-star-o fa-lg")
          |  #{model.favorites.length || 0}
      li
        a(href="/models/#start/edit")
          i(class="fa fa-fullscreen fa-lg")
          |  Full Screen
        

  div
    canvas.gl-player(id="my-canvas", width="800px", height="400px", onload="webGLStart();")
  
  p
    | #{model.description}
  p 
    | by 
    a(href='/users/#{model.creator}') #{model.creator}
  div
    a(class="pure-button pure-button-primary", href="#", id="buy-btn") Buy Now $#{model.price}
    script.
      $('#buy-btn').click(function(){
        var token = function(res){
          var $input = $('<input type=hidden name=stripeToken />').val(res.id);
          $('form').append($input).submit();
        };

        StripeCheckout.open({
          key:         'pk_test_czwzkTp2tactuLOEOqbMTRzG',
          address:     false,
          amount:      #{model.price*100},
          currency:    'usd',
          name:        '#{model.name}',
          description: 'Download rights',
          panelLabel:  'Checkout',
          image:       'http://placehold.it/128x128',
          token:       token
        });

        return false;
      });
  div
    | views: #{model.views}